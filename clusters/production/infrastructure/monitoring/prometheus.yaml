apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: flux-system
spec:
  interval: 30m
  targetNamespace: monitoring
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 65.0.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  install:
    createNamespace: true
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 3
  values:
    # ============================================
    # PROMETHEUS CONFIGURATION
    # ============================================
    prometheus:
      enabled: true
      prometheusSpec:
        replicas: 1
        retention: 15d
        retentionSize: "18GB"

        # ✅ UPDATED: Use relative path for subpath routing (no host)
        # AWS ELB will provide the external domain
        routePrefix: /prometheus

        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 2000m
            memory: 2Gi

        storageSpec:
          volumeClaimTemplate:
            spec:
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 20Gi

        # Service Monitor Selector
        serviceMonitorSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}

        # Istio scrape configs
        additionalScrapeConfigs:
          - job_name: 'istiod'
            kubernetes_sd_configs:
              - role: endpoints
                namespaces:
                  names:
                    - istio-system
            relabel_configs:
              - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
                action: keep
                regex: istiod;http-monitoring

          - job_name: 'envoy-stats'
            metrics_path: /stats/prometheus
            kubernetes_sd_configs:
              - role: pod
            relabel_configs:
              - source_labels: [__meta_kubernetes_pod_container_port_name]
                action: keep
                regex: '.*-envoy-prom'
              - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                action: replace
                regex: ([^:]+)(?::\d+)?;(\d+)
                replacement: $1:15020
                target_label: __address__
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: namespace
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: pod_name

    # ============================================
    # GRAFANA CONFIGURATION
    # ============================================
    grafana:
      enabled: true
      adminPassword: "admin"  # ⚠️ CHANGE THIS IN PRODUCTION!

      # ✅ UPDATED: Configure Grafana for subpath routing (no fixed domain)
      # AWS ELB will provide the external domain dynamically
      grafana.ini:
        server:
          root_url: "%(protocol)s://%(domain)s:%(http_port)s/grafana"
          serve_from_sub_path: true

        # Security settings
        security:
          allow_embedding: false

        # Anonymous access (optional - disable in production)
        auth.anonymous:
          enabled: false

      service:
        type: ClusterIP
        port: 80

      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 200m
          memory: 256Mi

      # Pre-configured dashboards for Istio
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: 'istio'
              orgId: 1
              folder: 'Istio'
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/istio

    # ============================================
    # ALERTMANAGER CONFIGURATION
    # ============================================
    alertmanager:
      enabled: true
      alertmanagerSpec:
        replicas: 1

        # ✅ UPDATED: Use relative path for subpath routing (no host)
        routePrefix: /alertmanager

        resources:
          requests:
            cpu: 10m
            memory: 32Mi
          limits:
            cpu: 50m
            memory: 64Mi

    # ============================================
    # NODE EXPORTER & KUBE STATE METRICS
    # ============================================
    nodeExporter:
      enabled: true

    kubeStateMetrics:
      enabled: true

    # ============================================
    # DEFAULT RULES
    # ============================================
    defaultRules:
      create: true

    # ============================================
    # PROMETHEUS OPERATOR
    # ============================================
    prometheusOperator:
      enabled: true
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 200m
          memory: 256Mi