{{- if .Values.newsIngestion.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.newsIngestion.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.newsIngestion.name }}
    component: ingestion
    {{- include "market-impact.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.newsIngestion.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.newsIngestion.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.newsIngestion.name }}
        component: ingestion
        {{- with .Values.commonLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - name: {{ .Values.newsIngestion.name }}
          image: {{ include "market-impact.image" (dict "registry" .Values.global.imageRegistry "repository" .Values.newsIngestion.image.repository "tag" .Values.newsIngestion.image.tag) }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.newsIngestion.service.httpPort }}
              name: http
              protocol: TCP
            - containerPort: {{ .Values.newsIngestion.service.grpcPort }}
              name: grpc
              protocol: TCP
          env:
            # Server Configuration
            - name: SERVER_HTTP_PORT
              value: {{ .Values.newsIngestion.env.serverHttpPort | quote }}
            - name: SERVER_GRPC_PORT
              value: {{ .Values.newsIngestion.env.serverGrpcPort | quote }}
            - name: SERVER_ENVIRONMENT
              value: {{ .Values.newsIngestion.env.serverEnvironment | quote }}

            # PostgreSQL Configuration (Go format)
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secretName }}
                  key: host
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secretName }}
                  key: port
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secretName }}
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secretName }}
                  key: password
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: NEWS_INGESTION_DB

            # Database Connection Pool Settings (Go format)
            - name: DATABASE_SSL_MODE
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: DATABASE_SSL_MODE
            - name: DATABASE_MAX_OPEN_CONNS
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: DATABASE_MAX_OPEN_CONNS_NEWS
            - name: DATABASE_MAX_IDLE_CONNS
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: DATABASE_MAX_IDLE_CONNS_NEWS
            - name: DATABASE_CONN_MAX_LIFETIME
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: DATABASE_CONN_MAX_LIFETIME_NEWS
            - name: DATABASE_CONN_MAX_IDLE_TIME
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: DATABASE_CONN_MAX_IDLE_TIME_NEWS

            # Redis Configuration (Go format)
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.secretName }}
                  key: host
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: redis-config
                  key: REDIS_PORT
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.secretName }}
                  key: password
                  optional: true
            - name: REDIS_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: redis-config
                  key: REDIS_DATABASE_NEWS_INGESTION

            # NewsAPI Configuration
            - name: NEWSAPI_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.apiKeys.secretName }}
                  key: newsapi-key
                  optional: true

            # Service Dependencies
            - name: NLP_PROCESSING_HOST
              value: {{ .Values.newsIngestion.env.nlpProcessingHost | quote }}
            - name: NLP_PROCESSING_PORT
              value: {{ .Values.newsIngestion.env.nlpProcessingPort | quote }}

          resources:
            {{- toYaml .Values.newsIngestion.resources | nindent 12 }}

          livenessProbe:
            {{- toYaml .Values.newsIngestion.livenessProbe | nindent 12 }}

          readinessProbe:
            {{- toYaml .Values.newsIngestion.readinessProbe | nindent 12 }}
{{- end }}
